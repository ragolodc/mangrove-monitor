version: '3.9'

networks:
  mangrove-network:
    driver: bridge

services:
  db:
    build:
      context: ./
      dockerfile: ./docker/database/postgresql/Dockerfile
    command: postgres -c "max_connections=${POSTGRESQL_MAX_CONNECTIONS}"
    # container_name: db4${COMPOSE_PROJECT_NAME}
    env_file:
      - .env
    volumes:
      - dbdata:/var/lib/postgresql/data
      # - dbbackups:/pg_backups
    restart: on-failure
    healthcheck:
      test: "pg_isready -d postgres -U postgres"
    networks:
      - mangrove-network
  
  geoserver:
    build:
      context: ./
      dockerfile: ./docker/geoserver/Dockerfile
    env_file:
      - .env
    volumes:
      - geoserver_data:/opt/geoserver_data
    healthcheck:
      test: curl --fail "http://localhost:8080/geoserver/web/wicket/resource/org.geoserver.web.GeoServerBasePage/img/logo.png" || exit 1
      interval: 1m
      retries: 3
      timeout: 5s
    networks:
      - mangrove-network
  
  geonetwork:
    build:
      context: ./
      dockerfile: ./docker/geonetwork/Dockerfile
    env_file:
      - .env
    volumes:
      - geonetwork_data:/catalogue-data
    healthcheck:
      test: curl http://localhost:8081/
      interval: 5s
      timeout: 5s
      retries: 30
    restart: always
    depends_on:
      db:
        condition: service_healthy
    networks:
      - mangrove-network

  elasticsearch:
    build:
      context: ./
      dockerfile: ./docker/elasticsearch/Dockerfile
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    healthcheck:
      test: curl -s http://localhost:9200 >/dev/null || exit 1
      interval: 10s
      timeout: 2s
      retries: 10
      start_period: 2m
    volumes:
      - es_data:/opt/es_data
    networks:
      - mangrove-network
  
  kibana:
    build:
      context: ./
      dockerfile: ./docker/kibana/Dockerfile
    depends_on:
      elasticsearch:
        condition: service_healthy
    networks:
      - mangrove-network

  mapstore:
    build:
      context: ./
      dockerfile: ./docker/mapstore/Dockerfile
      args:
        OVR: "geostore-datasource-ovr.properties"
        MAPSTORE_WEBAPP_SRC: "https://github.com/geosolutions-it/MapStore2/releases/latest/download/mapstore.war"
    extra_hosts:
      host.docker.internal: host-gateway
    